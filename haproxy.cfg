#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   https://www.haproxy.org/download/1.8/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    # stats socket /var/lib/haproxy/stats

    # utilize system-wide crypto-policies
    ssl-default-bind-ciphers PROFILE=SYSTEM
    ssl-default-server-ciphers PROFILE=SYSTEM

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    retries                 3
    timeout connect         10s
    timeout client          1m
    timeout server          1m
#---------------------------------------------------------------------
# main frontend which proxys to the backends
#---------------------------------------------------------------------
frontend rhel
    bind 192.168.31.201:80
    bind 192.168.31.201:443
    option tcplog
    mode tcp
    default_backend https_back
#---------------------------------------------------------------------
# round robin balancing between the various frontends api
#---------------------------------------------------------------------
frontend api_front
    bind 192.168.31.201:6443
    option tcplog
    mode tcp
    default_backend api_back
#---------------------------------------------------------------------
# round robin balancing between the various ssl backends
#---------------------------------------------------------------------
backend https_back
    mode tcp
    balance roundrobin
    option ssl-hello-chk
    server crc_backend <crc-ip>:443 check
#---------------------------------------------------------------------
# round robin balancing between the various backends api
#---------------------------------------------------------------------
backend api_back
    mode tcp
    balance roundrobin
    option ssl-hello-chk
    server crc_backend <crc-ip>:6443 check
